name: laravel-create-project

on:
  pull_request:
  schedule:
    - cron: "0 0 * * *"

jobs:
  docker-build-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Docker Version
        run: docker version

      - name: Build Docker Images
        run: docker compose build

      - name: Start Docker Containers
        run: docker compose up -d

      - name: OS Version
        run: |
          docker compose exec app cat /etc/os-release
          docker compose exec app cat /etc/debian_version

      - name: PHP Version
        run: docker compose exec app php --version

      - name: Composer Version
        run: docker compose exec app composer --version

      - name: Create Laravel Project
        run: docker compose exec app composer create-project --prefer-dist laravel/laravel .

      - name: Laravel Version
        run: docker compose exec app php artisan --version

      - name: Wait for the MySQL container to start
        run: sleep 5s
        shell: bash

      - name: Laravel Migrate Testing
        run: docker compose exec app php artisan migrate

      - name: Laravel Rollback Testing
        run: docker compose exec app php artisan migrate:refresh

      - name: Laravel Seeding Testing
        run: docker compose exec app php artisan db:seed

      - name: Laravel PHPUnit Testing
        run: docker compose exec app php artisan test

      - name: set docker compose file
        run: |
          cp ./config/docker-compose-prod.yml ./docker-compose.yml

  build:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: set docker-compose file
        run: cp ./config/docker-compose-prod.yml ./docker-compose.yml
      - name: composer
        run: |
          composer validate
          composer install --no-dev
          composer dump-autoload
                - name: composer
        working-directory: ./src
      - name: npm
        run: |
          yarn
          yarn build
        working-directory: ./src
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          name: id_rsa
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
          if_key_exists: replace
      - name: deploy
        run: |
          echo "${SSH_EMOVEE_PROD_USER}"
          echo "${SSH_EMOVEE_PROD_HOST}"
          rsync -rlOtcv -e 'ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no' --exclude='docker/mysql/data/*' --exclude='node_modules' ./ ${SSH_EMOVEE_PROD_USER}@${SSH_EMOVEE_PROD_HOST}:/home/service-user/projects/emovee
        env:
          SSH_EMOVEE_PROD_USER: ${{ secrets.SSH_EMOVEE_PROD_USER }}
          SSH_EMOVEE_PROD_HOST: ${{ secrets.SSH_EMOVEE_PROD_HOST }}
      - name: execute start scripts
        run: |
          ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no ${SSH_EMOVEE_PROD_USER}@${SSH_EMOVEE_PROD_HOST} "/bin/bash /home/service-user/projects/emovee/deploy_scripts/prod_deploy.sh"
        env:
          SSH_EMOVEE_PROD_USER: ${{ secrets.SSH_EMOVEE_PROD_USER }}
          SSH_EMOVEE_PROD_HOST: ${{ secrets.SSH_EMOVEE_PROD_HOST }}
